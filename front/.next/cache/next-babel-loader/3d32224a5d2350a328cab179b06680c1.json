{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_SUCCESS } from \"../reducers/user\";\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", {\n    nickname: data\n  });\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.patch(\"/user/followings\", {\n    nickname: data\n  });\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n} // 일부 값 수정시는 PATCH 사용\n\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log(\"saga login\");\n    const result = yield call(changeNicknameAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction* loadMyInfo(action) {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    // console.log(\"saga login\");\n    const result = yield call(loadMyInfoAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction* logIn(action) {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    // console.log(\"saga login\");\n    const result = yield call(logInAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // console.log(\"saga logout\");\n    yield call(logOutAPI); // yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    console.log(\"saga signUp\");\n    const result = yield call(signUpAPI, action.data);\n    console.log(result); // yield delay(1000);\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unFollow(action) {\n  try {\n    const result = yield call(unFollowAPI, action.data); // yield delay(1000);\n    // 아래는 post reducer 조작 부분\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/sagas/user.js"],"names":["axios","all","fork","put","takeLatest","delay","call","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_SUCCESS","loadFollowersAPI","data","get","nickname","loadFollowers","action","result","type","err","error","response","loadFollowingsAPI","patch","loadFollowings","changeNicknameAPI","changeNickname","console","log","loadMyInfoAPI","loadMyInfo","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unFollowAPI","delete","unFollow","watchLoadFollowings","watchLoadFollowers","watchChangeNickname","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\r\nimport {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n} from \"../reducers/user\";\r\n\r\nfunction loadFollowersAPI(data) {\r\n  return axios.get(\"/user/followers\", { nickname: data });\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield call(loadFollowersAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction loadFollowingsAPI(data) {\r\n  return axios.patch(\"/user/followings\", { nickname: data });\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield call(loadFollowingsAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 일부 값 수정시는 PATCH 사용\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch(\"/user/nickname\", { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    console.log(\"saga login\");\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* loadMyInfo(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    // console.log(\"saga login\");\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* logIn(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    // console.log(\"saga login\");\r\n    const result = yield call(logInAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // console.log(\"saga logout\");\r\n    yield call(logOutAPI);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      //   data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    console.log(\"saga signUp\");\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followAPI, action.data);\r\n    // yield delay(1000);\r\n\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unFollowAPI(data) {\r\n  return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unFollow(action) {\r\n  try {\r\n    const result = yield call(unFollowAPI, action.data);\r\n    // yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadFollowers),\r\n    fork(watchLoadFollowings),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}