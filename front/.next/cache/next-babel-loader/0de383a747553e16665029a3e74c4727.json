{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(retweet),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(unlikePost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchRetweet),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport axios from \"axios\";\nimport { all, fork, delay, takeLatest, put, throttle, call } from \"redux-saga/effects\"; // import shortId from \"shortid\";\n\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS // generateDummyPost,\n, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction retweetAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function retweet$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(retweetAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: RETWEET_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikePost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 13;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadPostsAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data // data: {\n            //   id,\n            //   content: action.data,\n            // },\n\n          });\n\n        case 6:\n          _context6.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 14;\n          return put({\n            type: ADD_POST_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 8:\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 15;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            data: _context7.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction addCommentAPI(data) {\n  //POST /post/1/comment\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            data: _context8.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime.wrap(function watchRetweet$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime.wrap(function watchUnlikePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return all([fork(watchRetweet), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/sagas/post.js"],"names":["retweet","uploadImages","likePost","unlikePost","loadPosts","addPost","removePost","addComment","watchRetweet","watchUploadImages","watchLikePost","watchUnlikePost","watchLoadPosts","watchAddComment","watchRemovePost","watchAddPost","postSaga","axios","all","fork","delay","takeLatest","put","throttle","call","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","retweetAPI","data","post","action","result","type","RETWEET_SUCCESS","console","error","RETWEET_FAILURE","response","uploadImagesAPI","likePostAPI","patch","unlikePostAPI","loadPostsAPI","get","addPostAPI","id","removePostAPI","addCommentAPI","postId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, fork, delay, takeLatest, put, throttle, call } from \"redux-saga/effects\";\r\n// import shortId from \"shortid\";\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  // generateDummyPost,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  LIKE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  RETWEET_REQUEST,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/images`, data);\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    // console.log(\"retweet in Saga\");\r\n    const result = yield call(retweetAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post(`/post/images`, data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    // console.log(\"uploadImages in Saga\");\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    // console.log(\"likePost in Saga\");\r\n    const result = yield call(likePostAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    // console.log(\"unlikePost in Saga\");\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get(\"/posts\", data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    // console.log(\"loadPosts in Saga\");\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    // yield delay(1000);\r\n    // const id = shortId.generate();\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n      // data: {\r\n      //   id,\r\n      //   content: action.data,\r\n      // },\r\n    });\r\n    // 아래는 user reducer 조작 부분\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    // yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    // 아래는 user reducer 조작 부분\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  //POST /post/1/comment\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchRetweet),\r\n    fork(watchUploadImages),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchAddPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}