{"ast":null,"code":"var _jsxFileName = \"F:\\\\Self Study_Coding\\\\Web\\\\Portfolio\\\\React_NodeBird\\\\preapre_second\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  // const [liked, setLiked] = useState(false);\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      retweetFailure = _useSelector.retweetFailure;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me; // const id = me && me.id;\n\n\n  var id = me === null || me === void 0 ? void 0 : me.id; // (위 me && me.id 와 같은 문법이지만 훨씬 짧은 새로운 문법)\n\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  useEffect(function () {\n    if (retweetFailure) {\n      alert(retweetFailure);\n    }\n  }, [retweetFailure]);\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n    /*\r\n    setLiked((prev) => true);\r\n    //참을 거짓으로, 거짓을 참으로 toggle로 바꿀때는 위와 같이 작성\r\n    */\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"red\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Modify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"'s comments\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 27\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"GZqM4IQmbp1jZFqbLJV9llzZgpA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/components/PostCard.js"],"names":["Avatar","Button","Card","Comment","List","Popover","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","React","useCallback","useEffect","useState","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","commentFormOpened","setCommentFormOpened","dispatch","state","removePostLoading","retweetFailure","user","me","id","liked","Likers","find","v","alert","onLike","type","data","onUnlike","onToggleComment","prev","onRemovePost","onRetweet","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,YALF,QAMO,mBANP;AAOA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,eAJF,QAKO,kBALP;AAMA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC7B;AACA,kBAAkDb,QAAQ,CAAC,KAAD,CAA1D;AAAA,MAAOc,iBAAP;AAAA,MAA0BC,oBAA1B;;AAEA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AACA,qBAA8CC,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACJ,IAAjB;AAAA,GAAD,CAAzD;AAAA,MAAQK,iBAAR,gBAAQA,iBAAR;AAAA,MAA2BC,cAA3B,gBAA2BA,cAA3B;;AAEA,sBAAejB,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,iBAAQA,EAAR,CAP6B,CAQ7B;;;AACA,MAAMC,EAAE,GAAGD,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEC,EAAf,CAT6B,CAU7B;;AAEA,MAAMC,KAAK,GAAGV,IAAI,CAACW,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACJ,EAAF,KAASA,EAAhB;AAAA,GAAjB,CAAd;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,cAAJ,EAAoB;AAClBQ,MAAAA,KAAK,CAACR,cAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,cAAD,CAJM,CAAT;AAMA,MAAMS,MAAM,GAAG9B,WAAW,CAAC,YAAM;AAC/B,QAAI,CAACwB,EAAL,EAAS;AACP,aAAOK,KAAK,CAAC,sBAAD,CAAZ;AACD;;AACD,WAAOX,QAAQ,CAAC;AACda,MAAAA,IAAI,EAAEtB,iBADQ;AAEduB,MAAAA,IAAI,EAAEjB,IAAI,CAACS;AAFG,KAAD,CAAf;AAIA;AACJ;AACA;AACA;AACG,GAZyB,EAYvB,CAACA,EAAD,CAZuB,CAA1B;AAaA,MAAMS,QAAQ,GAAGjC,WAAW,CAAC,YAAM;AACjC,QAAI,CAACwB,EAAL,EAAS;AACP,aAAOK,KAAK,CAAC,sBAAD,CAAZ;AACD;;AACD,WAAOX,QAAQ,CAAC;AACda,MAAAA,IAAI,EAAEpB,mBADQ;AAEdqB,MAAAA,IAAI,EAAEjB,IAAI,CAACS;AAFG,KAAD,CAAf;AAID,GAR2B,EAQzB,CAACA,EAAD,CARyB,CAA5B;AAUA,MAAMU,eAAe,GAAGlC,WAAW,CAAC,YAAM;AACxCiB,IAAAA,oBAAoB,CAAC,UAACkB,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAApB;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,MAAMC,YAAY,GAAGpC,WAAW,CAAC,YAAM;AACrC,QAAI,CAACwB,EAAL,EAAS;AACP,aAAOK,KAAK,CAAC,sBAAD,CAAZ;AACD;;AACD,WAAOX,QAAQ,CAAC;AACda,MAAAA,IAAI,EAAErB,mBADQ;AAEdsB,MAAAA,IAAI,EAAEjB,IAAI,CAACS;AAFG,KAAD,CAAf;AAID,GAR+B,EAQ7B,EAR6B,CAAhC;AAUA,MAAMa,SAAS,GAAGrC,WAAW,CAAC,YAAM;AAClC,QAAI,CAACwB,EAAL,EAAS;AACP,aAAOK,KAAK,CAAC,sBAAD,CAAZ;AACD;;AACD,WAAOX,QAAQ,CAAC;AACda,MAAAA,IAAI,EAAEnB,eADQ;AAEdoB,MAAAA,IAAI,EAAEjB,IAAI,CAACS;AAFG,KAAD,CAAf;AAID,GAR4B,EAQ1B,CAACA,EAAD,CAR0B,CAA7B;AAUA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEvB,IAAI,CAACwB,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAExB,IAAI,CAACwB;AAAzB;AAAA;AAAA;AAAA;AAAA,eAD3B;AAEE,MAAA,OAAO,EAAE,cACP,QAAC,eAAD;AAA+B,QAAA,OAAO,EAAEF;AAAxC,SAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eADO,EAEPZ,KAAK,gBACH,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,KAA3B;AAA6C,QAAA,OAAO,EAAEQ;AAAtD,SAAqC,OAArC;AAAA;AAAA;AAAA;AAAA,eADG,gBAGH,QAAC,aAAD;AAA2B,QAAA,OAAO,EAAEH;AAApC,SAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,eALK,eAOP,QAAC,eAAD;AAA+B,QAAA,OAAO,EAAEI;AAAxC,SAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eAPO,eAQP,QAAC,OAAD;AAEE,QAAA,OAAO,eACL,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACGV,EAAE,IAAIT,IAAI,CAACyB,IAAL,CAAUhB,EAAV,KAAiBA,EAAvB,gBACC;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEY,YAA/B;AAA6C,cAAA,OAAO,EAAEhB,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA,0BADD,gBAQC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,iBAHJ;AAAA,+BAgBE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAhBF,SACM,MADN;AAAA;AAAA;AAAA;AAAA,eARO,CAFX;AA6BE,MAAA,KAAK,EAAEI,EAAE,iBAAI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,eA7Bf;AAAA,6BA8BE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASA,IAAI,CAACyB,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,iBADV;AAEE,QAAA,KAAK,EAAE1B,IAAI,CAACyB,IAAL,CAAUC,QAFnB;AAGE,QAAA,WAAW,eAAE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAE1B,IAAI,CAAC2B;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHf;AAAA;AAAA;AAAA;AAAA;AA9BF;AAAA;AAAA;AAAA;AAAA,aADF,EAqCG1B,iBAAiB,iBAChB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,IAAD;AACE,QAAA,MAAM,YAAKA,IAAI,CAAC4B,QAAL,CAAcC,MAAnB,gBADR;AAEE,QAAA,UAAU,EAAC,YAFb;AAGE,QAAA,UAAU,EAAE7B,IAAI,CAAC4B,QAHnB;AAIE,QAAA,UAAU,EAAE,oBAACE,IAAD;AAAA,8BACV;AAAA,mCACE,QAAC,OAAD;AACE,cAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADpB;AAEE,cAAA,MAAM,eAAE,QAAC,MAAD;AAAA,0BAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,uBAFV;AAGE,cAAA,OAAO,EAAEI,IAAI,CAACH;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA6DD,CAhID;;GAAM5B,Q;UAIaX,W,EAC6BC,W,EAE/BA,W;;;KAPXU,Q;AAkINA,QAAQ,CAACgC,SAAT,GAAqB;AACnB/B,EAAAA,IAAI,EAAEV,SAAS,CAAC0C,KAAV,CAAgB;AACpBvB,IAAAA,EAAE,EAAEnB,SAAS,CAAC2C,MADM;AAEpBR,IAAAA,IAAI,EAAEnC,SAAS,CAAC4C,MAFI;AAGpBP,IAAAA,OAAO,EAAErC,SAAS,CAAC6C,MAHC;AAIpBC,IAAAA,SAAS,EAAE9C,SAAS,CAAC6C,MAJD;AAKpB3D,IAAAA,OAAO,EAAEc,SAAS,CAAC+C,OAAV,CAAkB/C,SAAS,CAAC4C,MAA5B,CALW;AAMpBV,IAAAA,MAAM,EAAElC,SAAS,CAAC+C,OAAV,CAAkB/C,SAAS,CAAC4C,MAA5B,CANY;AAOpBvB,IAAAA,MAAM,EAAErB,SAAS,CAAC+C,OAAV,CAAkB/C,SAAS,CAAC4C,MAA5B;AAPY,GAAhB,EAQHI;AATgB,CAArB;AAYA,eAAevC,QAAf","sourcesContent":["import { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n  HeartTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport {\r\n  LIKE_POST_REQUEST,\r\n  REMOVE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n  RETWEET_REQUEST,\r\n} from \"../reducers/post\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  // const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { removePostLoading, retweetFailure } = useSelector((state) => state.post);\r\n\r\n  const { me } = useSelector((state) => state.user);\r\n  // const id = me && me.id;\r\n  const id = me?.id;\r\n  // (위 me && me.id 와 같은 문법이지만 훨씬 짧은 새로운 문법)\r\n\r\n  const liked = post.Likers.find((v) => v.id === id);\r\n\r\n  useEffect(() => {\r\n    if (retweetFailure) {\r\n      alert(retweetFailure);\r\n    }\r\n  }, [retweetFailure]);\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"You need to sign in.\");\r\n    }\r\n    return dispatch({\r\n      type: LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n    /*\r\n    setLiked((prev) => true);\r\n    //참을 거짓으로, 거짓을 참으로 toggle로 바꿀때는 위와 같이 작성\r\n    */\r\n  }, [id]);\r\n  const onUnlike = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"You need to sign in.\");\r\n    }\r\n    return dispatch({\r\n      type: UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [id]);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"You need to sign in.\");\r\n    }\r\n    return dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onRetweet = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"You need to sign in.\");\r\n    }\r\n    return dispatch({\r\n      type: RETWEET_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n          liked ? (\r\n            <HeartTwoTone twoToneColor=\"red\" key=\"heart\" onClick={onUnlike} />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>Modify</Button>\r\n                    <Button type=\"danger\" onClick={onRemovePost} loading={removePostLoading}>\r\n                      Delete\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>Report</Button>\r\n                )}\r\n              </Button.Group>\r\n            }>\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}>\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}'s comments`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.string,\r\n    Comment: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    Likers: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}