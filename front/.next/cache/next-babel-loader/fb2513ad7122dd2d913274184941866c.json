{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unFollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport axios from \"axios\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"saga login\");\n          _context.next = 4;\n          return call(loadMyInfoAPI, action.data);\n\n        case 4:\n          result = _context.sent;\n          _context.next = 7;\n          return put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put({\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          console.log(\"saga login\");\n          _context2.next = 4;\n          return call(logInAPI, action.data);\n\n        case 4:\n          result = _context2.sent;\n          _context2.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(\"saga logout\");\n          _context3.next = 4;\n          return call(logOutAPI);\n\n        case 4:\n          _context3.next = 6;\n          return put({\n            type: LOG_OUT_SUCCESS //   data: result.data,\n\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          console.log(\"saga signUp\");\n          _context4.next = 4;\n          return call(signUpAPI, action.data);\n\n        case 4:\n          result = _context4.sent;\n          console.log(result); // yield delay(1000);\n\n          _context4.next = 8;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 8:\n          _context4.next = 14;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\n\nfunction followAPI(data) {\n  return axios.post(\"/api/follow\");\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: FOLLOW_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction unFollowAPI(data) {\n  return axios[\"delete\"](\"/api/post\", data);\n}\n\nfunction unFollow(action) {\n  return _regeneratorRuntime.wrap(function unFollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context6.next = 12;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 12;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unFollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/sagas/user.js"],"names":["loadMyInfo","logIn","logOut","signUp","follow","unFollow","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga","axios","all","fork","put","takeLatest","delay","call","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","loadMyInfoAPI","get","action","console","log","data","result","type","error","response","logInAPI","post","logOutAPI","signUpAPI","followAPI","unFollowAPI"],"mappings":";;oDA+BUA,U;qDA2BAC,K;qDAuBAC,M;qDAqBAC,M;qDAqBAC,M;qDAsBAC,Q;qDAkBAC,e;qDAIAC,U;qDAIAC,W;sDAGAC,W;sDAGAC,W;sDAGAC,a;sDAIeC,Q;;AAxLzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,eAPF,EAQEC,eARF,EASEC,eATF,EAUEC,gBAVF,EAWEC,gBAXF,EAYEC,gBAZF,EAaEC,cAbF,EAcEC,cAdF,EAeEC,cAfF,EAgBEC,oBAhBF,EAiBEC,oBAjBF,EAkBEC,oBAlBF,QAmBO,kBAnBP;;AAqBA,SAASC,aAAT,GAAyB;AACvB,SAAOzB,KAAK,CAAC0B,GAAN,CAAU,OAAV,CAAP;AACD,C,CAED;AACA;AACA;;;AAEA,SAAUvC,UAAV,CAAqBwC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIIC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAJJ;AAKmB,iBAAMvB,IAAI,CAACmB,aAAD,EAAgBE,MAAM,CAACG,IAAvB,CAAV;;AALnB;AAKUC,UAAAA,MALV;AAAA;AAOI,iBAAM5B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEV,oBADE;AAERQ,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYI,iBAAM3B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAET,oBADE;AAERU,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaJ;AAFZ,WAAD,CAAT;;AAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAASK,QAAT,CAAkBL,IAAlB,EAAwB;AACtB,SAAO9B,KAAK,CAACoC,IAAN,CAAW,aAAX,EAA0BN,IAA1B,CAAP;AACD,C,CAED;AACA;AACA;;;AAEA,SAAU1C,KAAV,CAAgBuC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIIC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAJJ;AAKmB,iBAAMvB,IAAI,CAAC6B,QAAD,EAAWR,MAAM,CAACG,IAAlB,CAAV;;AALnB;AAKUC,UAAAA,MALV;AAAA;AAOI,iBAAM5B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEvB,cADE;AAERqB,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYI,iBAAM3B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEzB,cADE;AAER0B,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaJ;AAFZ,WAAD,CAAT;;AAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SAASO,SAAT,GAAqB;AACnB,SAAOrC,KAAK,CAACoC,IAAN,CAAW,cAAX,CAAP;AACD;;AAED,SAAU/C,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIuC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAFJ;AAGI,iBAAMvB,IAAI,CAAC+B,SAAD,CAAV;;AAHJ;AAAA;AAKI,iBAAMlC,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEpB,eADE,CAER;;AAFQ,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUI,iBAAMT,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEtB,eADE;AAERuB,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaJ;AAFZ,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAASQ,SAAT,CAAmBR,IAAnB,EAAyB;AACvB,SAAO9B,KAAK,CAACoC,IAAN,CAAW,OAAX,EAAoBN,IAApB,CAAP;AACD;;AAED,SAAUxC,MAAV,CAAiBqC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAFJ;AAGmB,iBAAMvB,IAAI,CAACgC,SAAD,EAAYX,MAAM,CAACG,IAAnB,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAIIH,UAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ,EAJJ,CAKI;;AALJ;AAMI,iBAAM5B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAElB;AADE,WAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUI,iBAAMX,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEjB,eADE;AAERkB,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaJ;AAFZ,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAASS,SAAT,CAAmBT,IAAnB,EAAyB;AACvB,SAAO9B,KAAK,CAACoC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAAU7C,MAAV,CAAiBoC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMtB,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAKI,iBAAMF,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEX,cADE;AAERS,YAAAA,IAAI,EAAEH,MAAM,CAACG;AAFL,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUIF,UAAAA,OAAO,CAACK,KAAR;AAVJ;AAWI,iBAAM9B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEb,cADE;AAERW,YAAAA,IAAI,EAAE,aAAII,QAAJ,CAAaJ;AAFX,WAAD,CAAT;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAASU,WAAT,CAAqBV,IAArB,EAA2B;AACzB,SAAO9B,KAAK,UAAL,CAAa,WAAb,EAA0B8B,IAA1B,CAAP;AACD;;AAED,SAAUtC,QAAV,CAAmBmC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMtB,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAKI,iBAAMF,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEd,gBADE;AAERY,YAAAA,IAAI,EAAEH,MAAM,CAACG;AAFL,WAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUIF,UAAAA,OAAO,CAACK,KAAR;AAVJ;AAWI,iBAAM9B,GAAG,CAAC;AACR6B,YAAAA,IAAI,EAAEhB,gBADE;AAERc,YAAAA,IAAI,EAAE,aAAII,QAAJ,CAAaJ;AAFX,WAAD,CAAT;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAUrC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMW,UAAU,CAACoB,oBAAD,EAAuBrC,UAAvB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMU,UAAU,CAACI,cAAD,EAAiBpB,KAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUO,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,UAAU,CAACO,eAAD,EAAkBtB,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUO,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CAACS,eAAD,EAAkBvB,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUO,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACgB,cAAD,EAAiB7B,MAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUO,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAACa,gBAAD,EAAmBzB,QAAnB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUO,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CACRC,IAAI,CAACT,eAAD,CADI,EAERS,IAAI,CAACR,UAAD,CAFI,EAGRQ,IAAI,CAACP,WAAD,CAHI,EAIRO,IAAI,CAACN,WAAD,CAJI,EAKRM,IAAI,CAACL,WAAD,CALI,EAMRK,IAAI,CAACJ,aAAD,CANI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\r\nimport {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n} from \"../reducers/user\";\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* loadMyInfo(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    console.log(\"saga login\");\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* logIn(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    console.log(\"saga login\");\r\n    const result = yield call(logInAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    console.log(\"saga logout\");\r\n    yield call(logOutAPI);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      //   data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    console.log(\"saga signUp\");\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.post(\"/api/follow\");\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI, action.data);\r\n    yield delay(1000);\r\n\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unFollowAPI(data) {\r\n  return axios.delete(\"/api/post\", data);\r\n}\r\n\r\nfunction* unFollow(action) {\r\n  try {\r\n    // const result = yield call(unFollowAPI, action.data);\r\n    yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}