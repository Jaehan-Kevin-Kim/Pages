{"ast":null,"code":"var _jsxFileName = \"F:\\\\Self Study_Coding\\\\Web\\\\Portfolio\\\\React_NodeBird\\\\preapre_second\\\\front\\\\pages\\\\profile.js\";\nimport Router from \"next/router\";\nimport Head from \"next/head\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport FollowerList from \"../components/FollowerList\";\nimport FollowList from \"../components/FollowList\";\nimport NicknameEditForm from \"../components/NicknameEditForm\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst profile = () => {\n  // const followerList = [{ nickname: \"kevin\" }, { nickname: \"sample\" }, { nickname: \"admin user\"}];\n  // const followingList = [{ nickname: \"kevin\" }, { nickname: \"sample\" }, { nickname: \"admin\" }];\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"My Profile | Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"Following List\",\n        data: me.Followings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"Follower List\",\n        data: me.Followers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log(\"getServersideProps start\");\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  console.log(\"context\", context);\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default profile;","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/pages/profile.js"],"names":["Router","Head","React","useEffect","useDispatch","useSelector","AppLayout","FollowerList","FollowList","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","wrapper","axios","END","profile","dispatch","me","state","user","type","id","push","Followings","Followers","getServerSideProps","context","console","log","req","headers","cookie","defaults","Cookie","store","LOAD_MY_INFO_REQUEST","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport FollowerList from \"../components/FollowerList\";\r\nimport FollowList from \"../components/FollowList\";\r\nimport NicknameEditForm from \"../components/NicknameEditForm\";\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST } from \"../reducers/user\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport axios from \"axios\";\r\nimport { END } from \"redux-saga\";\r\n\r\nconst profile = () => {\r\n  // const followerList = [{ nickname: \"kevin\" }, { nickname: \"sample\" }, { nickname: \"admin user\"}];\r\n  // const followingList = [{ nickname: \"kevin\" }, { nickname: \"sample\" }, { nickname: \"admin\" }];\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n    });\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  if (!me) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>My Profile | Poster</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowList header=\"Following List\" data={me.Followings} />\r\n        <FollowList header=\"Follower List\" data={me.Followers} />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log(\"getServersideProps start\");\r\n  console.log(context.req.headers);\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  console.log(\"context\", context);\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default profile;\r\n"]},"metadata":{},"sourceType":"module"}