{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'Kevin'\n    },\n    content: 'First Post #HashTag, #Express',\n    // Images: [\n    //   {\n    //     src: \"https://res.cloudinary.com/highereducation/image/upload/c_scale,w_750/f_auto,fl_lossy,q_auto:eco/v1532988864/TheBestColleges.org/images/study-notebooks.jpg\",\n    //   },\n    //   {\n    //     src: \"https://www.fastweb.com/uploads/article_photo/photo/2161/crop380w_istock_000002193842xsmall-books.jpg\",\n    //   },\n    //   {\n    //     src: \"https://www.insidehighered.com/sites/default/server_files/media/iStock-520374378.jpg\",\n    //   },\n    // ],\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: 'Great post!'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'jaehan'\n      },\n      content: \"it's really educational\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'Kevin'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'Kevin'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: true,\n          addPostDone: false,\n          addPostError: null\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        // action.data.content, postId, userId;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n          addPostLoading: false,\n          addPostDone: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null\n        });\n      }\n    //아래 부분 이해 안되면 게시글,댓글 saga 작성 하기 다시 체크. 11:30분 정도\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: 'Kevin',\r\n      },\r\n      content: 'First Post #HashTag, #Express',\r\n      // Images: [\r\n      //   {\r\n      //     src: \"https://res.cloudinary.com/highereducation/image/upload/c_scale,w_750/f_auto,fl_lossy,q_auto:eco/v1532988864/TheBestColleges.org/images/study-notebooks.jpg\",\r\n      //   },\r\n      //   {\r\n      //     src: \"https://www.fastweb.com/uploads/article_photo/photo/2161/crop380w_istock_000002193842xsmall-books.jpg\",\r\n      //   },\r\n      //   {\r\n      //     src: \"https://www.insidehighered.com/sites/default/server_files/media/iStock-520374378.jpg\",\r\n      //   },\r\n      // ],\r\n      Images: [\r\n        {\r\n          id: shortId.generate(),\r\n          src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: 'nero',\r\n          },\r\n          content: 'Great post!',\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: 'jaehan',\r\n          },\r\n          content: `it's really educational`,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'Kevin',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'Kevin',\r\n  },\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST: {\r\n      return { ...state, addPostLoading: true, addPostDone: false, addPostError: null };\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      // action.data.content, postId, userId;\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n    }\r\n    case ADD_POST_FAILURE:\r\n      return { ...state, addPostLoading: false, addPostError: action.error };\r\n\r\n    case ADD_COMMENT_REQUEST: {\r\n      return { ...state, addCommentLoading: true, addCommentDone: false, addCommentError: null };\r\n    }\r\n\r\n    //아래 부분 이해 안되면 게시글,댓글 saga 작성 하기 다시 체크. 11:30분 정도\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = post;\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      return { ...state, addCommentLoading: false, addCommentError: action.error };\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}