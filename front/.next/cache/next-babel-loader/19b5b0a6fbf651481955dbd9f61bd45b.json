{"ast":null,"code":"import React, { useCallback, useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { Checkbox, Form, Input, Button } from \"antd\";\nimport AppLayout from \"../components/AppLayout\";\nimport useInput from \"../hooks/useinput\";\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from \"../reducers/user\";\nimport axios from \"axios\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from \"redux-saga\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace(\"/\"); // push하면 뒤로가기 했을때 다시 그 page가 살아있지만, replace하면 새로 변경된 페이지 전의 페이지가 사라지므로, 뒤로가기 해도 이전 페이지로 돌아가지 않음.\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace(\"/\");\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState(\"\");\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    console.log(e.target.checked);\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const ErrorMessage = styled.div.withConfig({\n    displayName: \"signup__ErrorMessage\",\n    componentId: \"sc-1oeks01-0\"\n  })([\"color:red;\"]);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      console.log(term);\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"SignUp Page | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"Email\"\n        }), \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          required: true,\n          onChange: onChangeEmail\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nickname\",\n          children: \"Nick Name\"\n        }), \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nickname\",\n          value: nickname,\n          required: true,\n          onChange: onChangeNickname\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"Password\"\n        }), \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          required: true,\n          onChange: onChangePassword\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password-check\",\n          children: \"Password Check\"\n        }), \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"Password is not matched!\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"Do you agree to the terms and conditions for use?\"\n        }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"You have to agree to the terms and conditions.\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"Sign Up\"\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log(\"getServersideProps start\");\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  console.log(\"context\", context);\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/pages/signup.js"],"names":["React","useCallback","useEffect","useState","Head","Checkbox","Form","Input","Button","AppLayout","useInput","styled","Router","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","SIGN_UP_REQUEST","axios","wrapper","END","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","id","replace","alert","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","console","log","checked","ErrorMessage","div","onSubmit","type","data","marginTop","getServerSideProps","context","req","headers","cookie","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { Checkbox, Form, Input, Button } from \"antd\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport useInput from \"../hooks/useinput\";\r\nimport styled from \"styled-components\";\r\nimport Router from \"next/router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from \"../reducers/user\";\r\nimport axios from \"axios\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport { END } from \"redux-saga\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector((state) => state.user);\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      Router.replace(\"/\"); // push하면 뒤로가기 했을때 다시 그 page가 살아있지만, replace하면 새로 변경된 페이지 전의 페이지가 사라지므로, 뒤로가기 해도 이전 페이지로 돌아가지 않음.\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      Router.replace(\"/\");\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  const [term, setTerm] = useState(\"\");\r\n  const [termError, setTermError] = useState(false);\r\n  const onChangeTerm = useCallback((e) => {\r\n    console.log(e.target.checked);\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  }, []);\r\n\r\n  const ErrorMessage = styled.div`\r\n    color: red;\r\n  `;\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n    if (!term) {\r\n      console.log(term);\r\n      return setTermError(true);\r\n    }\r\n    console.log(email, nickname, password);\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { email, password, nickname },\r\n    });\r\n  }, [password, passwordCheck, term]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>SignUp Page | NodeBird</title>\r\n      </Head>\r\n      <Form onFinish={onSubmit}>\r\n        <div>\r\n          <label htmlFor=\"user-email\">Email</label> <br />\r\n          <Input name=\"user-email\" type=\"email\" value={email} required onChange={onChangeEmail} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nickname\">Nick Name</label> <br />\r\n          <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">Password</label> <br />\r\n          <Input\r\n            name=\"user-password\"\r\n            type=\"password\"\r\n            value={password}\r\n            required\r\n            onChange={onChangePassword}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password-check\">Password Check</label> <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && <ErrorMessage>Password is not matched!</ErrorMessage>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n            Do you agree to the terms and conditions for use?\r\n          </Checkbox>\r\n          {termError && <ErrorMessage>You have to agree to the terms and conditions.</ErrorMessage>}\r\n        </div>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      {/* <AppLayout>\r\n        <div>Signup Page</div>\r\n      </AppLayout> */}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log(\"getServersideProps start\");\r\n  console.log(context.req.headers);\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  console.log(\"context\", context);\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}