{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, delay, takeLatest, put, throttle, call } from \"redux-saga/effects\"; // import shortId from \"shortid\";\n\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS // generateDummyPost,\n, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    // console.log(\"uploadImages in Saga\");\n    const result = yield call(uploadImagesAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      result: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    // console.log(\"likePost in Saga\");\n    const result = yield call(likePostAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    // console.log(\"unlikePost in Saga\");\n    const result = yield call(unlikePostAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    // console.log(\"loadPosts in Saga\");\n    const result = yield call(loadPostsAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data); // yield delay(1000);\n    // const id = shortId.generate();\n    // 아래는 post reducer 조작 부분\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data // data: {\n      //   id,\n      //   content: action.data,\n      // },\n\n    }); // 아래는 user reducer 조작 부분\n\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data); // yield delay(1000);\n    // 아래는 post reducer 조작 부분\n\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    }); // 아래는 user reducer 조작 부분\n\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  //POST /post/1/comment\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/sagas/post.js"],"names":["axios","all","fork","delay","takeLatest","put","throttle","call","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","uploadImagesAPI","data","post","uploadImages","action","result","type","err","console","error","response","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostsAPI","get","loadPosts","addPostAPI","content","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","watchUploadImages","watchLikePost","watchUnlikePost","watchLoadPosts","watchAddComment","watchRemovePost","watchAddPost","postSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, fork, delay, takeLatest, put, throttle, call } from \"redux-saga/effects\";\r\n// import shortId from \"shortid\";\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  // generateDummyPost,\r\n  LOAD_POSTS_FAILURE,\r\n  LOAD_POSTS_REQUEST,\r\n  LOAD_POSTS_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  LIKE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post(`/post/images`, data);\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    // console.log(\"uploadImages in Saga\");\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      result: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    // console.log(\"likePost in Saga\");\r\n    const result = yield call(likePostAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    // console.log(\"unlikePost in Saga\");\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostsAPI(data) {\r\n  return axios.get(\"/posts\", data);\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    // console.log(\"loadPosts in Saga\");\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/post\", { content: data });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    // yield delay(1000);\r\n    // const id = shortId.generate();\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n      // data: {\r\n      //   id,\r\n      //   content: action.data,\r\n      // },\r\n    });\r\n    // 아래는 user reducer 조작 부분\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    // yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    // 아래는 user reducer 조작 부분\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  //POST /post/1/comment\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchUploadImages),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchAddPost),\r\n    fork(watchLoadPosts),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}