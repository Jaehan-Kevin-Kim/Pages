{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_SUCCESS, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, LOAD_USER_REQUEST } from \"../reducers/user\";\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data); // yield delay(1000);\n\n    console.log(\"loadFollowers result\", result);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get(\"/user/followings\", data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data); // yield delay(1000);\n\n    console.log(\"loadFollowing result\", result);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n} // 일부 값 수정시는 PATCH 사용\n\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    console.log(\"saga login\");\n    const result = yield call(changeNicknameAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction* loadMyInfo(action) {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    // console.log(\"saga login\");\n    const result = yield call(loadMyInfoAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`user/${data}`);\n}\n\nfunction* loadUser() {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    // console.log(\"saga login\");\n    const result = yield call(loadUserAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction* logIn(action) {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    // console.log(\"saga login\");\n    const result = yield call(logInAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // console.log(\"saga logout\");\n    yield call(logOutAPI); // yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    console.log(\"saga signUp\");\n    const result = yield call(signUpAPI, action.data);\n    console.log(result); // yield delay(1000);\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unFollow(action) {\n  try {\n    const result = yield call(unFollowAPI, action.data); // yield delay(1000);\n    // 아래는 post reducer 조작 부분\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/FOLLOWER/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data); // yield delay(1000);\n    // 아래는 post reducer 조작 부분\n\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow), fork(watchRemoveFollower), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/sagas/user.js"],"names":["axios","all","fork","put","takeLatest","delay","call","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_SUCCESS","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_USER_REQUEST","loadFollowersAPI","data","get","loadFollowers","action","result","console","log","type","err","error","response","loadFollowingsAPI","loadFollowings","changeNicknameAPI","patch","nickname","changeNickname","loadMyInfoAPI","loadMyInfo","loadUserAPI","loadUser","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unFollowAPI","delete","unFollow","removeFollowerAPI","removeFollower","watchLoadFollowings","watchLoadFollowers","watchChangeNickname","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","watchRemoveFollower","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\r\nimport {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  REMOVE_FOLLOWER_SUCCESS,\r\n  REMOVE_FOLLOWER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n} from \"../reducers/user\";\r\n\r\nfunction loadFollowersAPI(data) {\r\n  return axios.get(\"/user/followers\", data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield call(loadFollowersAPI, action.data);\r\n    // yield delay(1000);\r\n    console.log(\"loadFollowers result\", result);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction loadFollowingsAPI(data) {\r\n  return axios.get(\"/user/followings\", data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield call(loadFollowingsAPI, action.data);\r\n    // yield delay(1000);\r\n    console.log(\"loadFollowing result\", result);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 일부 값 수정시는 PATCH 사용\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch(\"/user/nickname\", { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    console.log(\"saga login\");\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* loadMyInfo(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    // console.log(\"saga login\");\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n  return axios.get(`user/${data}`);\r\n}\r\n\r\nfunction* loadUser() {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    // console.log(\"saga login\");\r\n    const result = yield call(loadUserAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* logIn(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    // console.log(\"saga login\");\r\n    const result = yield call(logInAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // console.log(\"saga logout\");\r\n    yield call(logOutAPI);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      //   data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    console.log(\"saga signUp\");\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followAPI, action.data);\r\n    // yield delay(1000);\r\n\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unFollowAPI(data) {\r\n  return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unFollow(action) {\r\n  try {\r\n    const result = yield call(unFollowAPI, action.data);\r\n    // yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeFollowerAPI(data) {\r\n  return axios.delete(`/user/FOLLOWER/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n  try {\r\n    const result = yield call(removeFollowerAPI, action.data);\r\n    // yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadFollowers),\r\n    fork(watchLoadFollowings),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n    fork(watchRemoveFollower),\r\n    fork(watchLoadUser),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}