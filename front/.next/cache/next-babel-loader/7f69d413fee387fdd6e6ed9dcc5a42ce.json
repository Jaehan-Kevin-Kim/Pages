{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Button, Input, Form } from \"antd\";\n// import Form from \"antd/lib/form/Form\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport useInput from \"../hooks/useinput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRequestAction } from \"../reducers/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-k4bay5-0\"\n})([\"margin-top:10px;\"]);\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-k4bay5-1\"\n})([\"padding:10px;\"]);\n\nvar LoginForm = function LoginForm() {\n  var dispatch = useDispatch(); //useDispatch는 store.dispatch와 같음.\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError;\n\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  var onSubmitForm = useCallback(function () {\n    console.log(email, password); // setIsLoggedIn(true);\n\n    dispatch(loginRequestAction({\n      email: email,\n      password: password\n    }));\n  }, [email, password]);\n  return /*#__PURE__*/_jsxs(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-email\",\n        children: \"Email\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-email\",\n        type: \"email\",\n        value: email,\n        onChange: onChangeEmail,\n        required: true\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"Password\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-password\",\n        type: \"password\",\n        value: password,\n        onChange: onChangePassword,\n        required: true\n      })]\n    }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: logInLoading,\n        children: \"Log In\"\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"SignUp\"\n          })\n        })\n      })]\n    })]\n  });\n}; // LoginForm.propTypes = {\n//   setIsLoggedIn: Proptypes.func.isRequired,\n// };\n\n\nexport default LoginForm;","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/components/LoginForm.js"],"names":["React","useCallback","useEffect","useMemo","useState","Button","Input","Form","Link","styled","useInput","useDispatch","useSelector","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","email","onChangeEmail","password","onChangePassword","state","user","logInLoading","logInError","alert","onSubmitForm","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AAEA;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,IAAMC,aAAa,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,wBAAnB;AAIA,IAAMC,WAAW,GAAGP,MAAM,CAACF,IAAD,CAAT;AAAA;AAAA;AAAA,qBAAjB;;AAIA,IAAMU,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B,CADsB,CACU;;AAEhC,kBAA+BD,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAAqCV,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,qBAAqCV,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAhD;AAAA,MAAQC,YAAR,gBAAQA,YAAR;AAAA,MAAsBC,UAAtB,gBAAsBA,UAAtB;;AAEAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,UAAJ,EAAgB;AACdC,MAAAA,KAAK,CAACD,UAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,MAAME,YAAY,GAAG3B,WAAW,CAAC,YAAM;AACrC4B,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAmBE,QAAnB,EADqC,CAErC;;AACAH,IAAAA,QAAQ,CAACL,kBAAkB,CAAC;AAAEM,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,QAAQ,EAARA;AAAT,KAAD,CAAnB,CAAR;AACD,GAJ+B,EAI7B,CAACF,KAAD,EAAQE,QAAR,CAJ6B,CAAhC;AAMA,sBACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEO,YAAvB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA,QADF,eAEE,cAFF,eAGE,KAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAsC,QAAA,KAAK,EAAET,KAA7C;AAAoD,QAAA,QAAQ,EAAEC,aAA9D;AAA6E,QAAA,QAAQ;AAArF,QAHF;AAAA,MADF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA,QADF,eAEE,cAFF,eAGE,KAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEC,QAHT;AAIE,QAAA,QAAQ,EAAEC,gBAJZ;AAKE,QAAA,QAAQ;AALV,QAHF;AAAA,MANF,eAoBE,MAAC,aAAD;AAAA,8BAEE,KAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAEG,YAAlD;AAAA;AAAA,QAFF,eAKE,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACE;AAAA,iCACE,KAAC,MAAD;AAAA;AAAA;AADF;AADF,QALF;AAAA,MApBF;AAAA,IADF;AAmCD,CAtDD,C,CAwDA;AACA;AACA;;;AAEA,eAAeR,SAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Input, Form } from \"antd\";\r\nimport Proptypes from \"prop-types\";\r\n// import Form from \"antd/lib/form/Form\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport useInput from \"../hooks/useinput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginRequestAction } from \"../reducers/user\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch(); //useDispatch는 store.dispatch와 같음.\r\n\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const { logInLoading, logInError } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      alert(logInError);\r\n    }\r\n  }, [logInError]);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    console.log(email, password);\r\n    // setIsLoggedIn(true);\r\n    dispatch(loginRequestAction({ email, password }));\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor=\"user-email\">Email</label>\r\n        <br />\r\n        <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">Password</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          required\r\n        />\r\n      </div>\r\n      {/* 아래와 같이 작성하면 동작은 하지만 이렇게 하면 안됨: 이유는 아래와 같이 바로 style로 값을 줄 때 새로운 object가 생성이 됨. 이로인해 매번 로딩될때마다 불필요한 re-rendering 이 발생 함. 이를 해결하기 위해 styled-component 사용\r\n      styled component 사용법: 새로운 Component를 만들어 주고 해당 함수의 위에서 해당 component를 정의해 줌. 방식은 const 컴퍼넌트이름 = styled.원하는tag(eg.div)`내용`이런식으로 작성 함. \r\n      <div style={{ marginTop: \"10px\" }}> */}\r\n      <ButtonWrapper>\r\n        {/* <div style={styledMargin}> */}\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>\r\n          Log In\r\n        </Button>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button>SignUp</Button>\r\n          </a>\r\n        </Link>\r\n        {/* </div> */}\r\n      </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\n// LoginForm.propTypes = {\r\n//   setIsLoggedIn: Proptypes.func.isRequired,\r\n// };\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}