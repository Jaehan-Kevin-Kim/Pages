{"ast":null,"code":"import { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport moment from \"moment\";\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nimport Link from \"next/link\"; // moment.locale(\"ko\");\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  // const [liked, setLiked] = useState(false);\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me; // const id = me && me.id;\n\n\n  var id = me === null || me === void 0 ? void 0 : me.id; // (위 me && me.id 와 같은 문법이지만 훨씬 짧은 새로운 문법)\n\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n    /*\r\n    setLiked((prev) => true);\r\n    //참을 거짓으로, 거짓을 참으로 toggle로 바꿀때는 위와 같이 작성\r\n    */\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert(\"You need to sign in.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  console.log(\"post\", post);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsx(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsx(PostImages, {\n        images: post.Images\n      }),\n      actions: [/*#__PURE__*/_jsx(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\"), liked ? /*#__PURE__*/_jsx(HeartTwoTone, {\n        twoToneColor: \"red\",\n        onClick: onUnlike\n      }, \"heart\") : /*#__PURE__*/_jsx(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\"), /*#__PURE__*/_jsx(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\"), /*#__PURE__*/_jsx(Popover, {\n        content: /*#__PURE__*/_jsx(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              children: \"Modify\"\n            }), /*#__PURE__*/_jsx(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"Delete\"\n            })]\n          }) : /*#__PURE__*/_jsx(Button, {\n            children: \"Report\"\n          })\n        }),\n        children: /*#__PURE__*/_jsx(EllipsisOutlined, {})\n      }, \"more\")],\n      title: post.RetweetId ? \"Retweet by \".concat(post.User.nickname) : null,\n      extra: id && /*#__PURE__*/_jsx(FollowButton, {\n        post: post\n      }),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxs(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsx(PostImages, {\n          images: post.Retweet.Images\n        }),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            \"float\": \"right\"\n          },\n          children: moment(post.createdAt).format(\"YYYY.MM.DD\")\n        }), /*#__PURE__*/_jsx(Card.Meta, {\n          avatar: /*#__PURE__*/_jsx(Link, {\n            href: \"/user/\".concat(post.Retweet.User.id),\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Avatar, {\n                children: post.Retweet.User.nickname[0]\n              })\n            })\n          }),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsx(PostCardContent, {\n            postData: post.Retweet.content\n          })\n        })]\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            \"float\": \"right\"\n          },\n          children: moment(post.createdAt).fromNow()\n        }), /*#__PURE__*/_jsx(Card.Meta, {\n          avatar: /*#__PURE__*/_jsx(Link, {\n            href: \"/user/\".concat(post.User.id),\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Avatar, {\n                children: post.User.nickname[0]\n              })\n            })\n          }),\n          title: post.User.nickname,\n          description: /*#__PURE__*/_jsx(PostCardContent, {\n            postData: post.content\n          })\n        })]\n      })\n    }), commentFormOpened && /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(CommentForm, {\n        post: post\n      }), /*#__PURE__*/_jsx(List, {\n        header: \"\".concat(post.Comments.length, \"'s comments\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsx(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsx(Link, {\n                href: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  children: /*#__PURE__*/_jsx(Avatar, {\n                    children: item.User.nickname[0]\n                  })\n                })\n              }),\n              content: item.content\n            })\n          });\n        }\n      })]\n    })]\n  });\n};\n\nexport default PostCard;","map":null,"metadata":{},"sourceType":"module"}