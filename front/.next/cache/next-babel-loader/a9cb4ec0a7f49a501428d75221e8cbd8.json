{"ast":null,"code":"import React from \"react\";\nimport { Button, Card, List } from \"antd\";\nimport { StopOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FollowList = function FollowList(_ref) {\n  var header = _ref.header,\n      data = _ref.data,\n      onClickMore = _ref.onClickMore,\n      loading = _ref.loading;\n  var dispatch = useDispatch(); //고차 함수 사용\n\n  var onCancel = function onCancel(id) {\n    return function () {\n      if (header === \"Following List\") {\n        dispatch({\n          type: UNFOLLOW_REQUEST,\n          data: id\n        });\n      } else if (header === \"Follower List\") {\n        dispatch({\n          type: REMOVE_FOLLOWER_REQUEST,\n          data: id\n        });\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsx(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: /*#__PURE__*/_jsx(\"div\", {\n      children: header\n    }),\n    loadMore: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"10px 0\"\n      },\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: onClickMore,\n        loading: loading,\n        children: \"More...\"\n      })\n    }),\n    bordered: true,\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/_jsx(List.Item, {\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsx(Card, {\n          actions: [/*#__PURE__*/_jsx(StopOutlined, {\n            onClick: onCancel(item.id)\n          }, \"stop\")],\n          children: /*#__PURE__*/_jsx(Card.Meta, {\n            description: item.nickname\n          })\n        })\n      });\n    }\n  });\n};\n\nFollowList.PropTypes = {\n  header: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  onClickMore: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default FollowList;","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/components/FollowList.js"],"names":["React","Button","Card","List","StopOutlined","PropTypes","UNFOLLOW_REQUEST","REMOVE_FOLLOWER_REQUEST","useDispatch","FollowList","header","data","onClickMore","loading","dispatch","onCancel","id","type","marginBottom","gutter","xs","md","textAlign","margin","item","marginTop","nickname","array","isRequired","func","bool"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kBAA1D;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA4C;AAAA,MAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7D,MAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAD6D,CAG7D;;AACA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD;AAAA,WAAQ,YAAM;AAC7B,UAAIN,MAAM,KAAK,gBAAf,EAAiC;AAC/BI,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAEX,gBADC;AAEPK,UAAAA,IAAI,EAAEK;AAFC,SAAD,CAAR;AAID,OALD,MAKO,IAAIN,MAAM,KAAK,eAAf,EAAgC;AACrCI,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAEV,uBADC;AAEPI,UAAAA,IAAI,EAAEK;AAFC,SAAD,CAAR;AAID;AACF,KAZgB;AAAA,GAAjB;;AAaA,sBACE,KAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,eAAE;AAAA,gBAAMX;AAAN,MAJV;AAKE,IAAA,QAAQ,eACN;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA,6BACE,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAEX,WAAjB;AAA8B,QAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AADF,MANJ;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,UAAU,EAAEF,IAXd;AAYE,IAAA,UAAU,EAAE,oBAACa,IAAD;AAAA,0BACV,KAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,+BAEE,KAAC,IAAD;AAAM,UAAA,OAAO,EAAE,cAAC,KAAC,YAAD;AAAyB,YAAA,OAAO,EAAEV,QAAQ,CAACS,IAAI,CAACR,EAAN;AAA1C,aAAkB,MAAlB,CAAD,CAAf;AAAA,iCACE,KAAC,IAAD,CAAM,IAAN;AAAW,YAAA,WAAW,EAAEQ,IAAI,CAACE;AAA7B;AADF;AAFF,QADU;AAAA;AAZd,IADF;AAuBD,CAxCD;;AA0CAjB,UAAU,CAACJ,SAAX,GAAuB;AACrBK,EAAAA,MAAM,EAAEL,SAAS,CAACsB,KAAV,CAAgBC,UADH;AAErBjB,EAAAA,IAAI,EAAEN,SAAS,CAACsB,KAAV,CAAgBC,UAFD;AAGrBhB,EAAAA,WAAW,EAAEP,SAAS,CAACwB,IAAV,CAAeD,UAHP;AAIrBf,EAAAA,OAAO,EAAER,SAAS,CAACyB,IAAV,CAAeF;AAJH,CAAvB;AAOA,eAAenB,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Card, List } from \"antd\";\r\nimport { StopOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst FollowList = ({ header, data, onClickMore, loading }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //고차 함수 사용\r\n  const onCancel = (id) => () => {\r\n    if (header === \"Following List\") {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: id,\r\n      });\r\n    } else if (header === \"Follower List\") {\r\n      dispatch({\r\n        type: REMOVE_FOLLOWER_REQUEST,\r\n        data: id,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <List\r\n      style={{ marginBottom: 20 }}\r\n      grid={{ gutter: 4, xs: 2, md: 3 }}\r\n      size=\"small\"\r\n      header={<div>{header}</div>}\r\n      loadMore={\r\n        <div style={{ textAlign: \"center\", margin: \"10px 0\" }}>\r\n          <Button onClick={onClickMore} loading={loading}>More...</Button>\r\n        </div>\r\n      }\r\n      bordered\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item style={{ marginTop: 20 }}>\r\n          {/* // 아래 onClick 고차함수 사용 예시 (반복문에 유용함) */}\r\n          <Card actions={[<StopOutlined key=\"stop\" onClick={onCancel(item.id)} />]}>\r\n            <Card.Meta description={item.nickname} />\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nFollowList.PropTypes = {\r\n  header: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  onClickMore: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FollowList;\r\n"]},"metadata":{},"sourceType":"module"}