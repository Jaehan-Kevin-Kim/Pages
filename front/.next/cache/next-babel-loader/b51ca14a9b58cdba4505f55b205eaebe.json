{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import useInput from \"../hooks/useinput\";\n\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useinput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PostForm = function PostForm() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  console.log(\"imagePaths\", imagePaths);\n  var dispatch = useDispatch(); // const [text, onChangeText] = useInput(\"\");\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert(\"Please fill the post.\");\n    }\n\n    var formData = new FormData();\n    console.log(\"formData when initiated\", formData);\n    imagePaths.forEach(function (p) {\n      // console.log(\"p\", p);\n      formData.append(\"image\", p);\n    });\n    console.log(\"formData when only add image:p\", formData);\n    formData.append(\"content\", text);\n    console.log(\"formData after done append\", formData);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsx(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"Do you have anything to share?\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: onClickImageUpload,\n        children: \"Image Upload\"\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"Tweet!\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Button, {\n              onClick: onRemoveImage(i),\n              children: \"Remove\"\n            })\n          })]\n        }, v);\n      })\n    })]\n  });\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}