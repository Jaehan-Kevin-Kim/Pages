{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction* loadMyInfo(action) {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    console.log(\"saga login\");\n    const result = yield call(loadMyInfoAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n} // const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\n// l.next();\n// l.next();\n\n\nfunction* logIn(action) {\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\n  // put은 dispatch라고 생각하기\n  try {\n    console.log(\"saga login\");\n    const result = yield call(logInAPI, action.data); // yield delay(1000);\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    console.log(\"saga logout\");\n    yield call(logOutAPI); // yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    console.log(\"saga signUp\");\n    const result = yield call(signUpAPI, action.data);\n    console.log(result); // yield delay(1000);\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post(\"/api/follow\");\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(\"/api/post\", data);\n}\n\nfunction* unFollow(action) {\n  try {\n    // const result = yield call(unFollowAPI, action.data);\n    yield delay(1000); // 아래는 post reducer 조작 부분\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}","map":{"version":3,"sources":["F:/Self Study_Coding/Web/Portfolio/React_NodeBird/preapre_second/front/sagas/user.js"],"names":["axios","all","fork","put","takeLatest","delay","call","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","CHANGE_NICKNAME_REQUEST","loadMyInfoAPI","get","loadMyInfo","action","console","log","result","data","type","err","error","response","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unFollowAPI","delete","unFollow","watchChangeNickname","changeNickname","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\r\nimport {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  CHANGE_NICKNAME_REQUEST,\r\n} from \"../reducers/user\";\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* loadMyInfo(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    console.log(\"saga login\");\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\n// const l = logIn({type: 'LOG_IN_REQUEST', data: {id: 'jhkevin21@gmail.com'}})\r\n// l.next();\r\n// l.next();\r\n\r\nfunction* logIn(action) {\r\n  // 성공 결과는 result.data에, 실패경과는 err.response.data에 담겨있음\r\n  // put은 dispatch라고 생각하기\r\n  try {\r\n    console.log(\"saga login\");\r\n    const result = yield call(logInAPI, action.data);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    console.log(\"saga logout\");\r\n    yield call(logOutAPI);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      //   data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    console.log(\"saga signUp\");\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    // yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.post(\"/api/follow\");\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI, action.data);\r\n    yield delay(1000);\r\n\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unFollowAPI(data) {\r\n  return axios.delete(\"/api/post\", data);\r\n}\r\n\r\nfunction* unFollow(action) {\r\n  try {\r\n    // const result = yield call(unFollowAPI, action.data);\r\n    yield delay(1000);\r\n    // 아래는 post reducer 조작 부분\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}